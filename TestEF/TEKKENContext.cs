// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace TestEF
{
    public partial class TEKKENContext : DbContext
    {
        public TEKKENContext()
        {
        }

        public TEKKENContext(DbContextOptions<TEKKENContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Character> Character { get; set; }
        public virtual DbSet<CharacterName> CharacterName { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Korean_100_CI_AS_SC_UTF8");

            modelBuilder.Entity<Character>(entity =>
            {
                entity.ToTable("character");

                entity.HasIndex(e => e.Code, "IX_character")
                    .IsUnique();

                entity.HasIndex(e => e.CodeName, "IX_character_code_Unique")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code).HasColumnName("code");

                entity.Property(e => e.CodeName)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("code_name")
                    .IsFixedLength(true);

                entity.Property(e => e.Description)
                    .IsRequired()
                    .IsUnicode(false)
                    .HasColumnName("description");

                entity.Property(e => e.Season).HasColumnName("season");
            });

            modelBuilder.Entity<CharacterName>(entity =>
            {
                entity.ToTable("character_name");

                entity.HasIndex(e => new { e.CharacterCode, e.LanguageCode }, "IX_character_name")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CharacterCode).HasColumnName("character_code");

                entity.Property(e => e.FullName)
                    .IsRequired()
                    .IsUnicode(false)
                    .HasColumnName("fullName");

                entity.Property(e => e.LanguageCode)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("language_code")
                    .IsFixedLength(true);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("name");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}